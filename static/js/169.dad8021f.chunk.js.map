{"version":3,"file":"static/js/169.dad8021f.chunk.js","mappings":"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","sources":["components/phoneBook/ContactFilter/ContactFilter.styled.js","redux/contacts/selectors.js","components/phoneBook/ContactFilter/ContactFilter.js","components/phoneBook/ListContact/ListContact.styled.js","components/phoneBook/ListContact/ListContact.js","components/phoneBook/UserForm/UserForm.js","components/pages/Contacts.js","components/phoneBook/UserForm/UserForm.styled.js","redux/auth/validation.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const LabelForm = styled.label`\n  color: black;\n  margin: 0;\n  margin-bottom: 16px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: -0.18px;\n`;\n\nexport const Search = styled.input`\n  display: flex;\n  padding: 10px;\n`;\n\nexport const ResetButtons = styled.button`\n  padding: 8px 16px;\n  border-radius: 12px;\n  border: none;\n  background-color: #33ffff;\n  cursor: pointer;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #60e160;\n  }\n`;\n\nexport const LabelContacts = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  ContactsWrapper,\n  LabelContacts,\n  ResetButtons,\n  Search,\n} from './ContactFilter.styled';\nimport { changeValueFilter } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(changeValueFilter(evt.currentTarget.value));\n  };\n  const resetFilter = () => {\n    dispatch(changeValueFilter(''));\n  };\n  return (\n    <ContactsWrapper>\n      <LabelContacts>\n        Find contacts by name\n        <Search\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={changeFilter}\n        />\n        <ResetButtons type=\"button\" onClick={resetFilter}>\n          Reset filters\n        </ResetButtons>\n      </LabelContacts>\n    </ContactsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 15px;\n  margin-top: 10px;\n`;\nexport const DelBtn = styled.button`\n  padding: 5px 10px;\n  border-radius: 8px;\n  border: none;\n  background-color: #33ffff;\n  cursor: pointer;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: #f67417;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { DelBtn, List, ListItem } from './ListContact.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ListContact = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ListItem key={contact.id}>\n          <p>\n            {contact.name} : {contact.number}\n          </p>\n          <DelBtn type=\"button\" onClick={() => handleDelete(contact.id)}>\n            Delete\n          </DelBtn>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import {\n  FieldForm,\n  ContactForm,\n  Wrap,\n  LabelForm,\n  Buttons,\n  ErrMessage,\n} from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { getCreateFormSchema } from 'redux/auth/validation';\n\nconst schema = getCreateFormSchema();\n\nexport const UserForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      contacts.find(\n        ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      toast.error(`${values.name} already exists.`);\n      resetForm();\n      return;\n    }\n\n    dispatch(addContact(values));\n\n    toast.success(`${values.name} has succesfully added to your phonebook`);\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Wrap\n        initialValues={{ name: '', number: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <ContactForm>\n          <LabelForm>\n            Name\n            <FieldForm type=\"text\" name=\"name\" />\n            <ErrMessage name=\"name\" component=\"p\" />\n          </LabelForm>\n          <LabelForm>\n            Phone number\n            <FieldForm type=\"tel\" name=\"number\" required />\n            <ErrMessage name=\"number\" component=\"p\" />\n          </LabelForm>\n          <Buttons type=\"submit\">Add to contact</Buttons>\n          <Toaster />\n        </ContactForm>\n      </Wrap>\n    </div>\n  );\n};\n\nexport default UserForm;\n","import { Heading } from '@chakra-ui/react';\nimport { Filter } from 'components/phoneBook/ContactFilter/ContactFilter';\nimport { ListContact } from 'components/phoneBook/ListContact/ListContact';\nimport { UserForm } from 'components/phoneBook/UserForm/UserForm';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Heading as=\"h2\" size=\"x1\"></Heading>\n      <UserForm />\n      <Filter />\n      <ListContact />\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage, Formik } from 'formik';\n\nexport const ContactForm = styled(Form)`\n  display: flex;\n  flex-flow: column;\n  width: 400px;\n  border: 1px solid #000;\n  border-radius: 12px;\n  padding: 12px;\n`;\nexport const FieldForm = styled(Field)`\n  width: 80%;\n  margin-top: 8px;\n  display: flex;\n  padding: 10px;\n`;\n\nexport const Wrap = styled(Formik)`\n  margin-bottom: 12px;\n`;\nexport const ErrMessage = styled(ErrorMessage)`\n  margin-top: 8px;\n  color: #ff0000;\n`;\nexport const LabelForm = styled.label`\n  margin-bottom: 12px;\n  text-transform: uppercase;\n`;\n\nexport const Buttons = styled.button`\n  width: 50%;\n  padding: 8px 0;\n  cursor: pointer;\n  border: none;\n  border-radius: 12px;\n  background-color: #33ffff;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #60e160;\n  }\n`;\n","import * as yup from 'yup';\n\nexport const getRegisterSchema = () => {\n  return yup.object().shape({\n    name: yup\n      .string()\n      .matches(/^[a-zA-Zа-яА-Я\\s'-]*$/, 'Name should not contain numbers')\n      .required(),\n    email: yup.string().email('Invalid email format').required(),\n    password: yup\n      .string()\n      .min(6, 'Password must be at least 6 characters')\n      .required(),\n  });\n};\n\nexport const getLoginSchema = () => {\n  return yup.object().shape({\n    email: yup.string().email('Invalid email format').required(),\n    password: yup\n      .string()\n      .min(6, 'Password must be at least 6 characters')\n      .required(),\n  });\n};\n\nexport const getCreateFormSchema = () => {\n  return yup.object().shape({\n    name: yup\n      .string()\n      .matches(/^[a-zA-Zа-яА-Я\\s'-]*$/, 'Name should not contain numbers')\n      .required(),\n    number: yup\n      .string()\n      .min(5, 'Too short  phone number')\n      .max(12, 'Too long phone number')\n      .matches(\n        /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n        'Invalid phone number format'\n      )\n      .required(),\n  });\n};\n"],"names":["ContactsWrapper","styled","Search","ResetButtons","LabelContacts","getContacts","state","contacts","items","getFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","Filter","useSelector","dispatch","useDispatch","type","value","onChange","evt","changeValueFilter","currentTarget","onClick","List","ListItem","DelBtn","ListContact","map","number","contactId","id","deleteContact","schema","getCreateFormSchema","UserForm","initialValues","validationSchema","onSubmit","values","resetForm","find","toast","addContact","component","required","useEffect","fetchContacts","as","size","ContactForm","Form","FieldForm","Field","Wrap","Formik","ErrMessage","ErrorMessage","LabelForm","Buttons","getRegisterSchema","yup","shape","matches","email","password","min","getLoginSchema","max"],"sourceRoot":""}